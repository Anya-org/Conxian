name: Protected Testnet Deployment

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type DEPLOY to confirm testnet deployment'
        required: true
        type: string
      dry_run:
        description: 'Dry run only (no broadcast)'
        required: false
        type: boolean
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  CLARINET_VERSION: '3.5.0'

permissions:
  contents: read
  deployments: write

jobs:
  guardrails:
    name: Pre-Deployment Guardrails
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Validate Confirmation
        run: |
          if [ "${{ github.event.inputs.confirmation }}" != "DEPLOY" ]; then
            echo "You must type DEPLOY to proceed." >&2
            exit 1
          fi
      - name: Check Branch Protection
        run: |
          if [[ "${GITHUB_REF}" != "refs/heads/main" && "${GITHUB_REF}" != refs/heads/release/* ]]; then
            echo "Deployments only permitted from main or release/* branches" >&2
            exit 1
          fi

  prepare:
    name: Prepare Environment
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: guardrails
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install Dependencies
        run: npm ci --no-audit --no-fund
      - name: Verify Clarinet Installation
        run: npx clarinet --version
      - name: Compile Contracts
        timeout-minutes: 5
        run: npx clarinet check
      - name: Artifact Summary
        run: |
          echo "Contracts:"; ls -1 contracts | wc -l

  deploy:
    name: Deploy to Testnet
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: prepare
    environment: testnet
    permissions:
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install Dependencies
        run: npm ci --no-audit --no-fund
      - name: Verify Clarinet Installation
        run: npx clarinet --version
      - name: Deployment (Dry / Placeholder)
        run: |
          set -e
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "Dry run: generating deployment registry and performing validation"
            bash scripts/deploy-testnet.sh | head -n 80
            echo "(Add TESTNET_DEPLOYER_PRIVKEY secret & replace placeholder to enable live deploy)"
          else
            echo "Live deployment placeholder - secret integration pending."
            exit 1
          fi
      - name: Post Verification (Read-Only)
        run: NETWORK=testnet npm run verify-post || echo "Post verification issues (non-blocking)"

  summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: deploy
    if: always()
    permissions:
      contents: read
    steps:
      - name: Summarize
        run: |
          echo "## ðŸš€ Testnet Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "Branch: ${GITHUB_REF}" >> $GITHUB_STEP_SUMMARY
          echo "Dry Run: ${{ github.event.inputs.dry_run }}" >> $GITHUB_STEP_SUMMARY
          echo "Result: ${{ needs.deploy.result }}" >> $GITHUB_STEP_SUMMARY
